{"version":3,"sources":["components/Game/Instructions.module.css","components/Game/Scoreboard.module.css","components/Game/Card.module.css","components/Game/GameOver.module.css","components/Header/Header.module.css","components/Game/Level.module.css","components/Game/UserInterface.module.css","components/Game/CardGrid.module.css","components/Game/Game.module.css","App.module.css","images/cards sync nonrecursive //.(png|jpe?g|svg)$","images/cards/aqua.png","images/cards/axo trio.png","images/cards/aziza.png","images/cards/babs.png","images/cards/bart.png","images/cards/biden.png","images/cards/boba.png","images/cards/brisby.png","images/cards/brooke.png","images/cards/carl.png","images/cards/cole.png","images/cards/cosmina.png","images/cards/dina.png","images/cards/floyd.png","images/cards/gorden.png","images/cards/indie.png","images/cards/irina.png","images/cards/jason.png","images/cards/jonny.png","images/cards/kai.png","images/cards/lala.png","images/cards/liv.png","images/cards/lucille.png","images/cards/maggie.png","images/cards/malcolm.png","images/cards/martiza.png","images/cards/maurice.png","images/cards/morty.png","images/cards/omar.png","images/cards/palmer.png","images/cards/patty.png","images/cards/pillar.png","images/cards/ramon.png","images/cards/ratabaga.png","images/cards/rocket.png","images/cards/ronnie.png","images/cards/shelton.png","images/cards/simone.png","images/cards/stanley.png","images/cards/tank.png","images/cards/tex.png","images/cards/trey.png","images/cards/trinity.png","images/cards/veronica.png","images/cards/voilet.png","images/cards/waverley.png","images/cards/wendy.png","components/Header/Header.js","utils/getRandomArrayElement.js","utils/importImages.js","hooks/useCards.js","utils/getFileNameFromLocalPath.js","hooks/useGame.js","hooks/useScoreboard.js","components/Game/Card.js","components/Game/CardGrid.js","components/Game/GameOver.js","components/Game/Instructions.js","components/Game/Level.js","components/Game/Scoreboard.js","components/Game/UserInterface.js","components/Game/Game.js","App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","className","classes","header","gameName","getRandomArrayElement","array","Math","floor","random","length","images","importImages","r","require","forEach","key","getRandomCards","data","count","randomCards","i","min","randomCard","includes","push","useCards","useState","cards","setCards","activeCards","setActiveCards","useEffect","imageModules","cardsImgModules","name","path","replace","slice","imgSrc","default","hasBeenPicked","shuffleDeck","prevState","deckToShuffle","deck","randomIndex","getShuffledDeck","getNewCards","pickCard","pickedCard","card","unpickAllCards","useGame","isGameOver","setIsGameOver","pickedCardCount","setPickedCardCount","cardsAmount","setCardsAmount","currentLevel","setCurrentLevel","showInstructions","setShowInstructions","currentScore","setCurrentScore","bestScore","setBestScore","incrementCurrentScore","resetCurrentScore","useScoreboard","handleCardClick","resetGame","toggleInstructions","prev","Card","container","onClick","image","src","alt","text","CardGrid","GameOver","gameOver","score","Instructions","overlayClass","overlay","overlayActive","modalClass","modal","modalActive","modalTitle","modalText","btn","Level","Scoreboard","UserInterface","instructionsBtn","Game","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.721563fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Instructions_overlay__33l6a\",\"overlayActive\":\"Instructions_overlayActive__DQqin\",\"modal\":\"Instructions_modal__2FyLB\",\"modalTitle\":\"Instructions_modalTitle__zVC6j\",\"modalActive\":\"Instructions_modalActive__tfQBn\",\"btn\":\"Instructions_btn__3Hhm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Scoreboard_score__2d3JT\",\"currentScore\":\"Scoreboard_currentScore__a9eSy\",\"bestScore\":\"Scoreboard_bestScore__3S6kz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1BImp\",\"grow\":\"Card_grow__1_f2C\",\"image\":\"Card_image__pGP1p\",\"text\":\"Card_text__1H7q6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameOver_container__34uSj\",\"gameOver\":\"GameOver_gameOver__1QOY_\",\"score\":\"GameOver_score__3UfqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"gameName\":\"Header_gameName__2EWC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Level_container__30VbC\",\"text\":\"Level_text__2Zdiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserInterface_container__3LYIa\",\"instructionsBtn\":\"UserInterface_instructionsBtn__UNAZx Scoreboard_score__2d3JT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardGrid_container__3-wfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__3fJFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","var map = {\n\t\"./aqua.png\": 26,\n\t\"./axo trio.png\": 27,\n\t\"./aziza.png\": 28,\n\t\"./babs.png\": 29,\n\t\"./bart.png\": 30,\n\t\"./biden.png\": 31,\n\t\"./boba.png\": 32,\n\t\"./brisby.png\": 33,\n\t\"./brooke.png\": 34,\n\t\"./carl.png\": 35,\n\t\"./cole.png\": 36,\n\t\"./cosmina.png\": 37,\n\t\"./dina.png\": 38,\n\t\"./floyd.png\": 39,\n\t\"./gorden.png\": 40,\n\t\"./indie.png\": 41,\n\t\"./irina.png\": 42,\n\t\"./jason.png\": 43,\n\t\"./jonny.png\": 44,\n\t\"./kai.png\": 45,\n\t\"./lala.png\": 46,\n\t\"./liv.png\": 47,\n\t\"./lucille.png\": 48,\n\t\"./maggie.png\": 49,\n\t\"./malcolm.png\": 50,\n\t\"./martiza.png\": 51,\n\t\"./maurice.png\": 52,\n\t\"./morty.png\": 53,\n\t\"./omar.png\": 54,\n\t\"./palmer.png\": 55,\n\t\"./patty.png\": 56,\n\t\"./pillar.png\": 57,\n\t\"./ramon.png\": 58,\n\t\"./ratabaga.png\": 59,\n\t\"./rocket.png\": 60,\n\t\"./ronnie.png\": 61,\n\t\"./shelton.png\": 62,\n\t\"./simone.png\": 63,\n\t\"./stanley.png\": 64,\n\t\"./tank.png\": 65,\n\t\"./tex.png\": 66,\n\t\"./trey.png\": 67,\n\t\"./trinity.png\": 68,\n\t\"./veronica.png\": 69,\n\t\"./voilet.png\": 70,\n\t\"./waverley.png\": 71,\n\t\"./wendy.png\": 72\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;","export default __webpack_public_path__ + \"static/media/aqua.f98660e7.png\";","export default __webpack_public_path__ + \"static/media/axo trio.71ea6384.png\";","export default __webpack_public_path__ + \"static/media/aziza.4e69094d.png\";","export default __webpack_public_path__ + \"static/media/babs.6ca2f7ac.png\";","export default __webpack_public_path__ + \"static/media/bart.f37088a7.png\";","export default __webpack_public_path__ + \"static/media/biden.21d1c3c2.png\";","export default __webpack_public_path__ + \"static/media/boba.9933c615.png\";","export default __webpack_public_path__ + \"static/media/brisby.23bc22b3.png\";","export default __webpack_public_path__ + \"static/media/brooke.8dee8054.png\";","export default __webpack_public_path__ + \"static/media/carl.c20f88a1.png\";","export default __webpack_public_path__ + \"static/media/cole.e8b11e49.png\";","export default __webpack_public_path__ + \"static/media/cosmina.907087c0.png\";","export default __webpack_public_path__ + \"static/media/dina.732b8fb9.png\";","export default __webpack_public_path__ + \"static/media/floyd.bc9d9d80.png\";","export default __webpack_public_path__ + \"static/media/gorden.cd2dce6a.png\";","export default __webpack_public_path__ + \"static/media/indie.54178946.png\";","export default __webpack_public_path__ + \"static/media/irina.c6b59666.png\";","export default __webpack_public_path__ + \"static/media/jason.d31dc536.png\";","export default __webpack_public_path__ + \"static/media/jonny.1a044372.png\";","export default __webpack_public_path__ + \"static/media/kai.dfeb5cd3.png\";","export default __webpack_public_path__ + \"static/media/lala.3be94f92.png\";","export default __webpack_public_path__ + \"static/media/liv.5d39ded9.png\";","export default __webpack_public_path__ + \"static/media/lucille.bd653239.png\";","export default __webpack_public_path__ + \"static/media/maggie.f7efd9fb.png\";","export default __webpack_public_path__ + \"static/media/malcolm.36d8c72f.png\";","export default __webpack_public_path__ + \"static/media/martiza.38f67587.png\";","export default __webpack_public_path__ + \"static/media/maurice.cd72e5c3.png\";","export default __webpack_public_path__ + \"static/media/morty.c684fac8.png\";","export default __webpack_public_path__ + \"static/media/omar.90e0a657.png\";","export default __webpack_public_path__ + \"static/media/palmer.3acc21be.png\";","export default __webpack_public_path__ + \"static/media/patty.0fd6752f.png\";","export default __webpack_public_path__ + \"static/media/pillar.66340e60.png\";","export default __webpack_public_path__ + \"static/media/ramon.647b5174.png\";","export default __webpack_public_path__ + \"static/media/ratabaga.09b96478.png\";","export default __webpack_public_path__ + \"static/media/rocket.05080197.png\";","export default __webpack_public_path__ + \"static/media/ronnie.2d94e364.png\";","export default __webpack_public_path__ + \"static/media/shelton.ccfa5a07.png\";","export default __webpack_public_path__ + \"static/media/simone.3639a084.png\";","export default __webpack_public_path__ + \"static/media/stanley.874739d2.png\";","export default __webpack_public_path__ + \"static/media/tank.538f3eef.png\";","export default __webpack_public_path__ + \"static/media/tex.09dd81c4.png\";","export default __webpack_public_path__ + \"static/media/trey.b1db2c50.png\";","export default __webpack_public_path__ + \"static/media/trinity.b9d598a5.png\";","export default __webpack_public_path__ + \"static/media/veronica.b15ef148.png\";","export default __webpack_public_path__ + \"static/media/voilet.f41e3bf3.png\";","export default __webpack_public_path__ + \"static/media/waverley.40c856b8.png\";","export default __webpack_public_path__ + \"static/media/wendy.57187189.png\";","import React from 'react';\nimport classes from './Header.module.css';\n\nexport default function Header() {\n    return (\n        <header className={classes.header}>\n            <h1 className={classes.gameName}>Memory Card Game</h1>\n        </header>\n    );\n}\n","export default function getRandomArrayElement(array) {\n    const randomIndex = Math.floor(Math.random() * array.length);\n    return array[randomIndex];\n}\n","const images = {};\n\nexport default function importImages() {\n    importAll(require.context('../images/cards', false, /\\.(png|jpe?g|svg)$/));\n    return images;\n}\n\nfunction importAll(r) {\n    r.keys().forEach((key) => (images[key] = r(key)));\n}\n","import { useState, useEffect } from 'react';\nimport {\n    getRandomArrayElement,\n    getFileNameFromLocalPath,\n    importImages,\n} from '../utils';\n\nfunction getRandomCards(data, count) {\n    const randomCards = [];\n\n    for (let i = 0; i < Math.min(count, data.length); i++) {\n        let randomCard = getRandomArrayElement(data);\n\n        while (randomCards.includes(randomCard)) {\n            randomCard = getRandomArrayElement(data);\n        }\n\n        randomCards.push(randomCard);\n    }\n    return randomCards;\n}\n\nfunction getShuffledDeck(deckToShuffle) {\n    const deck = [...deckToShuffle];\n\n    for (let i = deck.length - 1; i > 0; i--) {\n        let randomIndex = Math.floor(Math.random() * (i + 1));\n\n        // swap elements array[i] and array[randomIndex]\n        [deck[i], deck[randomIndex]] = [deck[randomIndex], deck[i]];\n    }\n\n    return deck;\n}\n\nfunction createCards(imageModules) {\n    return Object.keys(imageModules).map((key) => {\n        return {\n            name: getFileNameFromLocalPath(key),\n            imgSrc: imageModules[key].default,\n            hasBeenPicked: false,\n        };\n    });\n}\n\nexport default function useCards(count) {\n    const [cards, setCards] = useState([]);\n    const [activeCards, setActiveCards] = useState([]);\n\n    function shuffleDeck() {\n        setActiveCards((prevState) => getShuffledDeck(prevState));\n    }\n\n    function getNewCards() {\n        const randomCards = getRandomCards(cards, count);\n        setActiveCards(randomCards);\n    }\n\n    function pickCard(pickedCard) {\n        setActiveCards((prevState) =>\n            prevState.map((card) =>\n                card === pickedCard\n                    ? {\n                          ...card,\n                          hasBeenPicked: true,\n                      }\n                    : card\n            )\n        );\n    }\n\n    function unpickAllCards() {\n        setActiveCards((prevState) =>\n            prevState.map((card) => ({ ...card, hasBeenPicked: false }))\n        );\n    }\n\n    useEffect(() => {\n        const cardsImgModules = importImages();\n        setCards(createCards(cardsImgModules));\n    }, []);\n\n    useEffect(() => {\n        const randomCards = getRandomCards(cards, count);\n        setActiveCards(randomCards);\n    }, [count, cards]);\n\n    return {\n        activeCards,\n        shuffleDeck,\n        getNewCards,\n        pickCard,\n        unpickAllCards,\n    };\n}\n","export default function getFileNameFromLocalPath(path) {\n    return path.replace(/\\.[^/.]+$/, '').slice(2);\n}\n","import { useState } from 'react';\nimport { useCards, useScoreboard } from '.';\n\nconst STARTING_CARDS_AMOUNT = 9;\nconst MAX_CARDS_AMOUNT = 9;\n\nexport default function useGame() {\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [pickedCardCount, setPickedCardCount] = useState(0);\n    const [cardsAmount, setCardsAmount] = useState(STARTING_CARDS_AMOUNT);\n    const [currentLevel, setCurrentLevel] = useState(1);\n    const [showInstructions, setShowInstructions] = useState(true);\n\n    const { activeCards, shuffleDeck, getNewCards, pickCard, unpickAllCards } =\n        useCards(cardsAmount);\n    const {\n        currentScore,\n        bestScore,\n        incrementCurrentScore,\n        resetCurrentScore,\n    } = useScoreboard();\n\n    function handleCardClick(card) {\n        if (card.hasBeenPicked) {\n            setIsGameOver(true);\n            return;\n        }\n\n        pickCard(card);\n        setPickedCardCount((prevState) => (prevState += 1));\n\n        incrementCurrentScore();\n\n        if (pickedCardCount + 1 >= activeCards.length) {\n            levelUp();\n        }\n\n        shuffleDeck();\n    }\n\n    function levelUp() {\n        setPickedCardCount(0);\n        unpickAllCards();\n        setCurrentLevel((prevState) => (prevState += 1));\n\n        if (cardsAmount + 1 <= MAX_CARDS_AMOUNT) {\n            setCardsAmount((prevState) => (prevState += 1));\n        }\n    }\n\n    function resetGame() {\n        resetCurrentScore();\n        setPickedCardCount(0);\n        setCardsAmount(STARTING_CARDS_AMOUNT);\n        setCurrentLevel(1);\n        getNewCards();\n        setIsGameOver(false);\n    }\n\n    function toggleInstructions() {\n        setShowInstructions((prev) => !prev);\n    }\n\n    return {\n        activeCards,\n        currentScore,\n        bestScore,\n        handleCardClick,\n        isGameOver,\n        resetGame,\n        currentLevel,\n        showInstructions,\n        toggleInstructions,\n    };\n}\n","import { useState } from 'react';\n\nexport default function useScoreboard() {\n    const [currentScore, setCurrentScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n\n    function incrementCurrentScore() {\n        setCurrentScore((prevState) => (prevState += 1));\n\n        if (currentScore + 1 > bestScore) setBestScore(currentScore + 1);\n    }\n\n    function resetCurrentScore() {\n        setCurrentScore(0);\n    }\n\n    return {\n        currentScore,\n        bestScore,\n        incrementCurrentScore,\n        resetCurrentScore,\n    };\n}\n","import React from 'react';\nimport classes from './Card.module.css';\n\nexport default function Card({ card, handleCardClick }) {\n    function handleClick() {\n        handleCardClick(card);\n    }\n\n    return (\n        <div className={classes.container} onClick={handleClick}>\n            <img className={classes.image} src={card.imgSrc} alt={card.name} />\n            <p className={classes.text}>{card.name}</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport classes from './CardGrid.module.css';\nimport Card from './Card';\n\nexport default function CardGrid({ activeCards, handleCardClick }) {\n    return (\n        <div className={classes.container}>\n            {activeCards.map((card) => (\n                <Card\n                    // Math.random used to make cards\n                    // rerender every time so animation runs\n                    key={card.name + Math.random()}\n                    card={card}\n                    handleCardClick={handleCardClick}\n                />\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport classes from './GameOver.module.css';\n\nexport default function GameOver({ currentScore, resetGame }) {\n    return (\n        <div className={classes.container}>\n            <h1 className={classes.gameOver}>Game Over</h1>\n            <h2 className={classes.score}>Score: {currentScore}</h2>\n            <button className=\"btn\" onClick={resetGame}>\n                New Game\n            </button>\n        </div>\n    );\n}\n","import React from 'react';\nimport classes from './Instructions.module.css';\n\nexport default function Instructions({ showInstructions, toggleInstructions }) {\n    const overlayClass = showInstructions\n        ? `${classes.overlay} ${classes.overlayActive}`\n        : classes.overlay;\n\n    const modalClass = showInstructions\n        ? `${classes.modal} ${classes.modalActive}`\n        : classes.modal;\n\n    return (\n        <>\n            <div className={overlayClass} onClick={toggleInstructions}></div>\n            <div className={modalClass}>\n                <h1 className={classes.modalTitle}>How To Play</h1>\n                <p className={classes.modalText}>\n                    Click each card that hasn't been clicked during the current\n                    level.\n                </p>\n                <p className={classes.modalText}>\n                    Each correct card that you click will increase your score by\n                    1\n                </p>\n                <p className={classes.modalText}>\n                    Clicking a card that you have already clicked will result in\n                    game over.\n                </p>\n                <p className={classes.modalText}>\n                    Once each card has been clicked, you will advance to the\n                    next level, where the amount of cards will increase.\n                </p>\n                <button\n                    className={`btn ${classes.btn}`}\n                    onClick={toggleInstructions}\n                >\n                    Play\n                </button>\n            </div>\n        </>\n    );\n}\n","import React from 'react';\nimport classes from './Level.module.css';\n\nexport default function Level({ currentLevel }) {\n    return (\n        <div className={classes.container}>\n            <p className={classes.text}>Level: {currentLevel}</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport classes from './Scoreboard.module.css';\n\nexport default function Scoreboard({ currentScore, bestScore }) {\n    return (\n        <>\n            <p className={`${classes.score} ${classes.currentScore}`}>\n                Score: {currentScore}\n            </p>\n            <p className={`${classes.score} ${classes.bestScore}`}>\n                Best Score: {bestScore}\n            </p>\n        </>\n    );\n}\n","import Level from './Level';\nimport Scoreboard from './Scoreboard';\nimport classes from './UserInterface.module.css';\n\nexport default function UserInterface({\n    currentLevel,\n    currentScore,\n    bestScore,\n    toggleInstructions,\n}) {\n    return (\n        <div className={classes.container}>\n            <Level currentLevel={currentLevel} />\n            <button\n                className={`btn ${classes.instructionsBtn}`}\n                onClick={toggleInstructions}\n                aria-label=\"Show Instructions\"\n            >\n                ?\n            </button>\n            <Scoreboard currentScore={currentScore} bestScore={bestScore} />\n        </div>\n    );\n}\n","import React from 'react';\nimport { useGame } from '../../hooks';\nimport CardGrid from './CardGrid';\nimport GameOver from './GameOver';\nimport Instructions from './Instructions';\nimport classes from './Game.module.css';\nimport UserInterface from './UserInterface';\n\nexport default function Game() {\n    const {\n        activeCards,\n        currentScore,\n        bestScore,\n        handleCardClick,\n        isGameOver,\n        resetGame,\n        currentLevel,\n        showInstructions,\n        toggleInstructions,\n    } = useGame();\n\n    return (\n        <main className={classes.container}>\n            {isGameOver ? (\n                <GameOver currentScore={currentScore} resetGame={resetGame} />\n            ) : showInstructions ? (\n                <Instructions\n                    showInstructions={showInstructions}\n                    toggleInstructions={toggleInstructions}\n                />\n            ) : (\n                <>\n                    <Instructions\n                        showInstructions={showInstructions}\n                        toggleInstructions={toggleInstructions}\n                    />\n                    <UserInterface\n                        currentLevel={currentLevel}\n                        currentScore={currentScore}\n                        bestScore={bestScore}\n                        toggleInstructions={toggleInstructions}\n                    />\n                    <CardGrid\n                        activeCards={activeCards}\n                        handleCardClick={handleCardClick}\n                    />\n                </>\n            )}\n        </main>\n    );\n}\n","import { Header, Game } from './components';\nimport classes from './App.module.css';\n\nfunction App() {\n    return (\n        <div className={classes.container}>\n            <Header />\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}